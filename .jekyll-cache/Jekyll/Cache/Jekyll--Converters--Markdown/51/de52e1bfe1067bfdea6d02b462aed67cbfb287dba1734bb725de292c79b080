I"â!<h3 id="1-docker-info">1. Docker Info</h3>
<h3 id="what-is-docker">What is Docker?</h3>

<p><img src="/images/docker_container_engine_logo.png" alt="_config.yml" /></p>

<p>Docker is an open source containerization platform.</p>

<h3 id="why-use-docker-">Why use Docker ?</h3>

<ul>
  <li>Insulation and separation applications.</li>
  <li>Standardize container creation.</li>
  <li>Container versioning.</li>
  <li>Shared container images.</li>
  <li>and so on.</li>
</ul>

<h3 id="docker-architecture">Docker architecture</h3>

<p><img src="/images/docker-architecture.svg" alt="_config.yml" /></p>

<h3 id="dockerfile">DockerFile</h3>

<ul>
  <li>Docker can build images automatically by reading the instructions from a Dockerfile.</li>
</ul>

<h3 id="docker-images">Docker images</h3>

<ul>
  <li>A Docker image is a file used to execute code in a Docker container.Docker images act as a set of instructions to build a Docker container, like a template.</li>
</ul>

<h3 id="docker-containers">Docker containers</h3>

<ul>
  <li>Containers are a form of operating system virtualization. A single container might be used to run anything from a small microservice or software process to a larger application. Inside a container are all the necessary executables, binary code, libraries, and configuration files. Compared to server or machine virtualization approaches, however, containers do not contain operating system images. This makes them more lightweight and portable, with significantly less overhead.</li>
</ul>

<h3 id="docker-registry-docker-hub">Docker Registry (Docker Hub)</h3>

<ul>
  <li>A Docker registry is a storage and distribution system for named Docker images.</li>
</ul>

<h3 id="docker-daemon">Docker daemon</h3>

<ul>
  <li>The Docker daemon is a service that runs on your host operating system. It currently only runs on Linux because it depends on a number of Linux kernel features, but there are a few ways to run Docker on MacOS and Windows too.</li>
</ul>

<h2 id="2-docker-install">2. Docker install</h2>

<ul>
  <li>
    <p>Uninstall old versions</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  apt-get remove docker docker.io containerd runc <span class="nt">-y</span>
  <span class="c">#docker-engine</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Update the apt package index and install packages to allow apt to use a repository over HTTPS:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
  <span class="nb">sudo </span>apt-get update
    
  <span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="se">\</span>
      apt-transport-https <span class="se">\</span>
      ca-certificates <span class="se">\</span>
      curl <span class="se">\</span>
      gnupg <span class="se">\</span>
      lsb-release <span class="nt">-y</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Add Dockerâ€™s official GPG key:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | <span class="nb">sudo </span>apt-key add -
</code></pre></div>    </div>
  </li>
  <li>
    <p>Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8
characters of the fingerprint.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">sudo </span>apt-key fingerprint 0EBFCD88
    
      pub   rsa4096 2017-02-22 <span class="o">[</span>SCEA]
            9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
      uid           <span class="o">[</span> unknown] Docker Release <span class="o">(</span>CE deb<span class="o">)</span> &lt;docker@docker.com&gt;
      sub   rsa4096 2017-02-22 <span class="o">[</span>S]
</code></pre></div>    </div>
  </li>
  <li>
    <p>Repository add</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  add-apt-repository <span class="se">\</span>
         <span class="s2">"deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span class="se">\</span><span class="s2">
         </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2"> </span><span class="se">\</span><span class="s2">
         stable"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install Docker</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  apt-get update 
  <span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-ce docker-ce-cli containerd.io <span class="nt">-y</span> 
</code></pre></div>    </div>
  </li>
  <li>
    <p>Service ÅŸeklinde Ã§alÄ±ÅŸtÄ±r</p>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nx">systemctl</span> <span class="nx">start</span> <span class="nx">docker</span>
  <span class="nx">systemctl</span> <span class="nx">enable</span> <span class="nx">docker</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Control</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
  docker run hello-world
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="lets-do-sample">Letâ€™s do sample</h3>

<ul>
  <li>
    <p>Define directory and sample file</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">mkdir</span> ~/sample-dockerfile/<span class="p">;</span> <span class="nb">cd</span> ~/sample-dockerfile/
  <span class="nb">echo</span> <span class="s2">"I am learning docker"</span> <span class="o">&gt;</span> learn-docker.txt
</code></pre></div>    </div>
  </li>
  <li>
    <p>Define Dockerfile</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nv">$ </span>vim Dockerfile 
  FROM ubuntu:20.04
  RUN apt update 
  RUN apt <span class="nb">install </span>iftop <span class="nt">-y</span>
  COPY learn-docker.txt learn-docker.txt
</code></pre></div>    </div>
  </li>
  <li>
    <p>Dockerfile build (Docker-deamon pull ubuntu image from docker hub, then the docker-daemon does other processes ,Finally, The Output is container image )</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker build <span class="nb">.</span> <span class="nt">-t</span> learn-docker
</code></pre></div>    </div>
  </li>
  <li>
    <p>Run container image</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker run <span class="nt">-it</span> <span class="nt">--name</span> learn-docker learn-docker bash
  <span class="nb">ls 
  cat </span>learn-docker.txt
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="3-install-docker-compose">3. install docker compose</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nv">LATEST_URL</span><span class="o">=</span><span class="sb">`</span>curl <span class="nt">-Ls</span> <span class="nt">-o</span> /dev/null <span class="nt">-w</span> %<span class="o">{</span>url_effective<span class="o">}</span> https://github.com/docker/compose/releases/latest<span class="sb">`</span>
<span class="nv">COMPOSE_VERSION</span><span class="o">=</span><span class="k">${</span><span class="nv">LATEST_URL</span><span class="p">##*/</span><span class="k">}</span>
<span class="nv">DOWNLOAD_URL</span><span class="o">=</span>https://github.com/docker/compose/releases/download/<span class="k">${</span><span class="nv">COMPOSE_VERSION</span><span class="k">}</span>/docker-compose-<span class="sb">`</span><span class="nb">uname</span> <span class="nt">-s</span><span class="sb">`</span>-<span class="sb">`</span><span class="nb">uname</span> <span class="nt">-m</span><span class="sb">`</span>
curl <span class="nt">-L</span> <span class="k">${</span><span class="nv">DOWNLOAD_URL</span><span class="k">}</span> <span class="nt">-o</span> /usr/local/bin/docker-compose
<span class="nb">chmod</span> +x /usr/local/bin/docker-compose
bash
</code></pre></div></div>

<p>Referance:</p>
<ul>
  <li>https://www.upguard.com/blog/docker-vs-lxc</li>
  <li>https://www.ibm.com/cloud/learn/docker</li>
  <li>https://www.techtarget.com/searchitoperations/definition/Docker-image</li>
</ul>
:ET